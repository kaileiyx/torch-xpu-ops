name: Torch Nightly WHL Tests

on:
  schedule:
    # GMT+8 21:00 every workday
    - cron: '0 14 * * 0-4'
    # GMT+8 0:00 Saturday
    - cron: '0 17 * * 5'
  workflow_dispatch:
    inputs:
      pytorch:
        required: false
        type: string
        default: 'nightly'
        description: Pytorch branch/commit
      ut:
        required: false
        type: string
        default: 'torch_xpu'
        description: UT scope. `op_regression,op_regression_dev1,op_transformers,op_extended,op_ut,torch_xpu,xpu_profiling`. Delimiter is comma
      suite:
        required: true
        type: string
        default: 'huggingface'
        description: Dynamo benchmarks test suite. `huggingface,timm_models,torchbench,pt2e`. Delimiter is comma
      dt:
        required: true
        type: string
        default: 'float32'
        description: Data precision of the test. `float32,bfloat16,float16,amp_bf16,amp_fp16`. Delimiter is comma
      mode:
        required: true
        type: string
        default: 'inference'
        description: Test mode. `inference,training`. Delimiter is comma
      scenario:
        required: true
        type: string
        default: 'accuracy'
        description: Test scenario. `accuracy,performance`. Delimiter is comma
      model:
        required: false
        type: string
        default: ''
        description: Model. Will only run this one mode if set
      python:
        required: false
        type: string
        default: '3.10'
        description: Python version

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}-${{ github.event_name }}-${{ inputs.pytorch }}-${{ inputs.ut }}-${{ inputs.suite }}-${{ inputs.dt }}-${{ inputs.mode }}-${{ inputs.scenario }}-${{ inputs.model }}-${{ inputs.python }}
  cancel-in-progress: ${{ github.event_name != 'schedule' }}

jobs:
  Linux-Nightly-Ondemand-E2E-WHL-Tests:
    runs-on: arc
    # Don't run on forked repos
    if: ${{ github.repository_owner == 'kaileiyx' }}
    timeout-minutes: 3600
    env:
      GH_TOKEN: ${{ github.token }}
      pytorch: ${{ github.event_name == 'schedule' && 'nightly' || inputs.pytorch }}
      python: ${{ github.event_name == 'schedule' && '3.10' || inputs.python }}
      run_type: ${{ (github.event_name == 'schedule' && (github.event.schedule == '0 17 * * 5' && 'weekly' || 'nightly')) || 'on-demand' }}
    outputs:
      TORCH_BRANCH_ID: ${{ steps.installed.outputs.TORCH_BRANCH_ID }}
      TORCH_COMMIT_ID: ${{ steps.installed.outputs.TORCH_COMMIT_ID }}
      TORCH_XPU_OPS_COMMIT: ${{ steps.installed.outputs.TORCH_XPU_OPS_COMMIT }}
      TORCHBENCH_COMMIT_ID: ${{ steps.pinned.outputs.TORCHBENCH_COMMIT_ID }}
      TORCHVISION_COMMIT_ID: ${{ steps.pinned.outputs.TORCHVISION_COMMIT_ID }}
      TORCHAUDIO_COMMIT_ID: ${{ steps.pinned.outputs.TORCHAUDIO_COMMIT_ID }}
      TRANSFORMERS_VERSION: ${{ steps.pinned.outputs.TRANSFORMERS_VERSION }}
      TIMM_COMMIT_ID: ${{ steps.pinned.outputs.TIMM_COMMIT_ID }}
      TRITON_COMMIT_ID: ${{ steps.pinned.outputs.TRITON_COMMIT_ID }}
      DRIVER_VERSION: ${{ steps.pinned.outputs.DRIVER_VERSION }}
      KERNEL_VERSION: ${{ steps.pinned.outputs.KERNEL_VERSION }}
      BUNDLE_VERSION: ${{ steps.pinned.outputs.BUNDLE_VERSION }}
      OS_PRETTY_NAME: ${{ steps.pinned.outputs.OS_PRETTY_NAME }}
      GCC_VERSION: ${{ steps.pinned.outputs.GCC_VERSION }}
      TIMEOUT_MODELS: ${{ steps.summary.outputs.TIMEOUT_MODELS }}
    steps:
      - name: Summarize archieve files
        id: summary
        if: ${{ ! cancelled() }}
        run: |
            source activate e2e_ci
            #cp -r ${{ github.workspace }}/.github/scripts/summary_pt2e.py ${{ github.workspace }}/upload_files
            #cd ${{ github.workspace }}/upload_files
            python ${{ github.workspace }}/.github/scripts/summary_pt2e.py ${{ github.workspace }}/upload_files/pt2e
            #rm -rf summary_pt2e.py
      - name: Upload Inductor XPU E2E Data
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Inductor-${{ env.run_type }}-Pre-XPU-E2E-Data-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/upload_files
